#!/bin/bash
#
prog=cryp_ssl
usage="$prog host_ip [domain] [port]"
#
#	Check for ssl crypt problems on given host and port

CUSTOM_ZGRAB=$GOPATH"/src/gopkg.in/eniac/zgrab.v0/zgrab.v0"
TMPDIR=${TMPDIR:-/tmp}
WRKDIR=$TMPDIR/$prog
mkdir -p $WRKDIR #2>/dev/null
rm -rf $WRKDIR/*

case $# in
1)
	h=$1
	d=''
	p=443;;
2)	h=$1
        d=$2
	p=443;;
3)	h=$1
	d=$2
	p=$3;;
*)
	echo "$usage" 1>&2
	exit 1
esac


cat <<!EOF >$WRKDIR/nmap_error_fields
warnings
!EOF

#	Cheesy xml processing: we use sed to extract all the SSL
#	warnings and combine them into a single line.

nmap -oX - --script ssl-enum-ciphers -p $p $h	|
	xmllint --format - 			| tee $WRKDIR/nmapxml |
	awk -v OFS='	' '
	/address addr/ {
		n=split($2, fields, "\"")
		addr = fields[2]
		next
	}

	/protocol=".* portid="/ {
		n=split($2, fields, "\"")
		protocol = fields[2]
		n=split($3, fields, "\"")
		port = fields[2]
		next
	}
		

	/key="warnings"/ {
		copying = 1
		next
	}

	copying == 0 { next }

	/<\/table>/ {
		copying = 0
		next
	}

	{	error = $0
		gsub(/ *<\/?elem>/, "", error)
		print addr, protocol, port, "nmap", error
	}' | sort -u



for scan in 0 1 m1 g3 g5 g7
do
case $scan in
m1)     scan_str="-1";;
g3)	scan_str="with order 3 subgroup";;
g5)	scan_str="with order 5 subgroup";;
g7)     scan_str="with order 7 subgroup";;        
*)
        scan_str=$scan
esac

	tmp_out=`echo $h,$d | $CUSTOM_ZGRAB --tls --port $p --dhe-ciphers --tls-invalid-kex $scan --tls-verbose 2>/dev/null | head -n 1`
	failure=`echo $tmp_out | jq '.data.tls | keys | contains(["server_finished"])'`
	if [ $failure = "true" ] ; then
	    echo "WARNING: Server negotiated DH key exchange with value $scan_str"
	fi
done
